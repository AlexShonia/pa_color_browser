{"version":3,"sources":["util/Api.js","util/ValidationError.js","icons/launchicon.svg","components/Image.js","components/FormField.js","components/ColorPicker.js","components/Browser.js","icons/gobackicon.svg","components/DetailView.js","components/App.js","serviceWorker.js","index.js"],"names":["Api","url","validate","onSuccess","onFailure","config","axios","get","this","getRequestConfig","then","response","error","catch","data","finalConfig","post","defaultConfig","baseURL","process","REACT_APP_API_URL","defaultHeaders","headers","Object","assign","ValidationError","message","name","Error","_extends","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","SvgLaunchicon","_ref","svgRef","title","titleId","props","viewBox","width","height","ref","id","ForwardRef","Image","image","gridCell","state","classes","w","h","className","to","pathname","pjId","src","alt","colorCount","author","FormField","register","filter","size","value","type","htmlFor","console","log","ColorPicker","setState","useState","selectedIndex","setSelectedIndex","x","y","colorPickerPos","setColorPickerPos","displayPicker","setDisplayPicker","colorPickerRef","useRef","paletteRef","paletteContainerRef","useEffect","handleClickOutside","event","current","contains","undefined","document","addEventListener","removeEventListener","rect","getBoundingClientRect","DisplayPalette","colorPalette","map","color","style","backgroundColor","boxShadow","onClick","el","item","paletteCopy","push","position","display","left","top","zIndex","onChange","hex","disableAlpha","Browser","setData","isLoading","setIsLoading","activeFilters","setActiveFilters","useForm","defaultValues","filters","control","handleSubmit","useFieldArray","fields","append","remove","validator","onSucces","keyword","colorMin","colorMax","sizeType","beforeDate","afterDate","transparency","tolerance","getImages","e","includes","field","index","removeFilter","ShowArtworks","margin","SvgGobackicon","DetailView","setImage","selectedColors","setSelectedColors","detailLoading","setDetailLoading","relatingLoading","setRelatingLoading","copied","setCopied","swatch","setSwatch","zoomWidth","setZoomWidth","useParams","ShowDetail","Details","selectColor","colorObj","mouseSwatch","Palette","concat","colors","sort","a","b","dbBrightness","onMouseEnter","PaletteBar","percent","ColorSwatch","text","toUpperCase","onCopy","rgb","Math","round","Tags","tags","tag","updateTag","tagLinks","entries","href","img","getElementById","clientWidth","naturalWidth","zoomOut","zoomIn","desc","trans","allColors","selectAll","ShowRelatingArtworks","getImage","colorarray","slice","relatingArtworks","splice","getRelatingArtworks","JSON","stringify","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8704cc77.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nclass Api {\r\n\r\n    static get(url, validate, onSuccess, onFailure, config = {}) {\r\n        axios.get(url, this.getRequestConfig(config))\r\n            .then(function (response) {\r\n                try {\r\n                    validate(response);\r\n                    onSuccess(response);\r\n                } catch (error) {\r\n                    onFailure(error);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                onFailure(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }\r\n    \r\n    static post(url, validate, onSuccess, onFailure, config = {}, data = null) {\r\n        const finalConfig = this.getRequestConfig(config);\r\n        axios.post(url, data ? data : finalConfig.data, finalConfig)\r\n            .then(function (response) {\r\n                try {\r\n                    validate(response);\r\n                    onSuccess(response);\r\n                } catch (error) {\r\n                    onFailure(error);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                onFailure(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }\r\n\r\n    static getRequestConfig(config = {}) {\r\n        let defaultConfig = {\r\n            baseURL: process.env.REACT_APP_API_URL\r\n        };\r\n    \r\n        let defaultHeaders = {};\r\n    \r\n        defaultConfig.headers = defaultHeaders;\r\n    \r\n        const finalConfig = Object.assign(defaultConfig, config);\r\n        return finalConfig;\r\n    }\r\n}\r\n\r\nexport default Api;\r\n","class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}\r\n\r\nexport default ValidationError;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 19H6c-.55 0-1-.45-1-1V6c0-.55.45-1 1-1h5c.55 0 1-.45 1-1s-.45-1-1-1H5c-1.11 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55-.45 1-1 1zM14 4c0 .55.45 1 1 1h2.59l-9.13 9.13c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L19 6.41V9c0 .55.45 1 1 1s1-.45 1-1V3h-6c-.55 0-1 .45-1 1z\"\n});\n\nfunction SvgLaunchicon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"whitesmoke\",\n    width: \"16px\",\n    height: \"16px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLaunchicon);\nexport default __webpack_public_path__ + \"static/media/launchicon.47e7017b.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { ReactComponent as LaunchIcon } from '../icons/launchicon.svg';\r\n\r\nexport default function Image({image, i, state}){\r\n    const gridCell = 128;\r\n    const minOvershoot = 20;\r\n    const gridGap = 8;\r\n\r\n    let classes=\"art-grid\";\r\n    let w = gridCell\r\n    let h = gridCell\r\n    if (image.width > gridCell + minOvershoot){\r\n        classes += \" grid-w2\";\r\n        w = w * 2 + gridGap;\r\n    }\r\n    if (image.height > gridCell + minOvershoot){\r\n        classes += \" grid-h2\";\r\n        h = h * 2 + gridGap;\r\n    }\r\n\r\n    return(\r\n        <div key={i} className={classes}>\r\n            <Link to={{pathname:`/detail/${image.pjId}`}}>\r\n            {/* Scale small images 2x, tiny images 3x */}\r\n            {image.width <= gridCell/2 && image.height <= gridCell/2\r\n                ? image.width <= gridCell/3 && image.height <= gridCell/3\r\n                    ?<span><span className=\"helper\"></span><img src={image.url} alt={image.title} id={i} width={image.width * 3} height={image.height * 3}></img></span>\r\n                    :<span><span className=\"helper\"></span><img src={image.url} alt={image.title} id={i} width={image.width * 2} height={image.height * 2}></img></span>\r\n                : <img src={image.url} alt={image.title} id={i} className=\"fit\" width={w} height={h}></img>\r\n            }\r\n            \r\n            <div className=\"overlay\"></div>\r\n            <div className=\"color-count\">\r\n                {image.colorCount} Colors\r\n            </div>\r\n            <div className=\"launch\">\r\n                <LaunchIcon></LaunchIcon>\r\n            </div>\r\n            <div className=\"preview\">\r\n                {image.title}<br/>\r\n                by {image.author}\r\n            </div>\r\n            </Link>\r\n        </div> \r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default function FormField({register, filter}){\r\n    switch(filter){\r\n        case \"Keyword\":\r\n            return (\r\n                <>\r\n                <span className=\"tooltip\"><span className=\"tooltiptext\">Searches in title and tags</span>Keyword: </span><input id=\"keyword\" name='keyword' ref={register()}></input> \r\n                </>    \r\n            )\r\n        case \"Author\":\r\n            return (\r\n                <>\r\n                <span className=\"tooltip\"><span className=\"tooltiptext\">Name or part of name</span>Author: </span><input id=\"author\" name='author' ref={register()}></input> \r\n                </>    \r\n            )\r\n        case \"Color count\":\r\n            return (\r\n                <>\r\n                <span className=\"tooltip\"><span className=\"tooltiptext\">Colors are counted on frame 1 of animations</span>Color count: </span>\r\n                Minimum: \r\n                <input name='colorMin' size=\"2\" ref={register()}></input>\r\n                 Maximum: \r\n                <input name='colorMax' size=\"2\" ref={register()}></input> \r\n                </>    \r\n            )\r\n        case \"Size\":\r\n            return( \r\n                <>\r\n                Size: \r\n                    <select name=\"sizeType\" ref={register()}>                        \r\n                        <option value=\"min\">Minimum</option>\r\n                        <option value=\"max\">Maximum</option>\r\n                        <option value=\"equal\">Equals</option>\r\n                    </select>\r\n                     Width:  \r\n                    <input name=\"width\" size=\"2\" ref={register()}></input>\r\n                     Height:  \r\n                    <input name=\"height\" size=\"2\" ref={register()}></input> \r\n                </>    \r\n            )\r\n            \r\n        case \"Date\":\r\n            return (\r\n                <>\r\n                    Date after \r\n                    <input type=\"date\" name=\"afterDate\" ref={register()}></input> \r\n                     Date before \r\n                    <input type=\"date\" name=\"beforeDate\" ref={register()}></input> \r\n                </>    \r\n            )\r\n        // case \"Animation\":\r\n        //     return (\r\n        //         <>\r\n        //         Animation:<span className=\"onoff\"> <input type=\"checkbox\" name='animation' id=\"animation\"  ref={register}></input><label htmlFor=\"animation\"></label></span>\r\n        //         </>    \r\n        //     )\r\n        case \"Transparency\":\r\n            return (\r\n                <>\r\n                Transparency: <span className=\"onoff\"> <input type=\"checkbox\" name='transparency' id=\"transparency\" ref={register()}></input><label htmlFor=\"transparency\"></label> </span>\r\n                </>    \r\n            )\r\n        case \"Tolerance\":\r\n            return (\r\n                <>\r\n                <span className=\"tooltip\"><span className=\"tooltiptext\">Tolerance influences how accurate the colors of your query match the colors in the search result. 0 means exact match only, 20 means your r/g/b values +/- 20 for each of those values. Default is between 7 and 25 depending on the amount of colors in the query.</span>Color tolerance: </span><input name=\"tolerance\" size=\"2\" ref={register()}></input>\r\n                </>    \r\n            )\r\n        default:\r\n            console.log(\"formfield:\");\r\n            console.log(filter);\r\n            return <p>NOTHING  I GUESS</p>\r\n    }    \r\n}","import React, { useEffect, useState, useRef } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport '../CSS/colorPicker.scss';\r\n\r\nexport default function ColorPicker({state, setState}){\r\n    const [selectedIndex, setSelectedIndex] = useState();\r\n    const [colorPickerPos, setColorPickerPos] = useState({x: 0, y: 0});\r\n    const [displayPicker, setDisplayPicker] = useState(false);\r\n    const colorPickerRef = useRef(null);\r\n    const paletteRef = useRef([]);\r\n    const paletteContainerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if((colorPickerRef.current && !colorPickerRef.current.contains(event.target)) && \r\n            (paletteContainerRef.current && !paletteContainerRef.current.contains(event.target))) {\r\n                setDisplayPicker(false);\r\n                setSelectedIndex(undefined);\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [colorPickerRef]);\r\n\r\n    useEffect(()=>{\r\n        if(typeof selectedIndex !== 'undefined' && paletteRef.current[selectedIndex] !== null){\r\n            setDisplayPicker(true);\r\n            let rect = paletteRef.current[selectedIndex].getBoundingClientRect();\r\n            setColorPickerPos({x: rect['x'], y: rect['y']});\r\n        }\r\n    }, [selectedIndex])\r\n    \r\n    const newColor = () => {\r\n        let paletteCopy = state.colorPalette;\r\n        paletteCopy.push('#000000');\r\n        setState(state => ({...state, colorPalette: paletteCopy}));\r\n        setSelectedIndex(state.colorPalette.length-1);\r\n        setDisplayPicker(true);\r\n    }\r\n\r\n    const handleColorChange = (color) => {\r\n        let paletteCopy = state.colorPalette;\r\n        paletteCopy[selectedIndex] = color.hex;\r\n        setState(state => ({...state, colorPalette: paletteCopy}));\r\n    }\r\n\r\n    const DisplayPalette = () => {\r\n        if(state.colorPalette.length){\r\n            return state.colorPalette.map((color, i) =>\r\n                <div \r\n                    className=\"swatch\" \r\n                    style={{\r\n                        backgroundColor: color,\r\n                        boxShadow: i===selectedIndex? '0px 0px 0px 2px rgba(255,255,255,1) inset': '0px 0px 0px 2px rgba(0, 0, 0, 0) inset'\r\n                    }} \r\n                    onClick={()=>setSelectedIndex(i)} key={i}\r\n                    ref={el => (paletteRef.current[i] = el)}\r\n                >\r\n                    <div className=\"color\">\r\n                        <div \r\n                            className=\"remove-color\" \r\n                            onClick={()=>\r\n                                setState(state=>({\r\n                                    ...state, \r\n                                    colorPalette: state.colorPalette.filter(item => item !== color)\r\n                                }))\r\n                            }\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div ref={paletteContainerRef} id={\"palette\"} className=\"color-search-container\">\r\n                <DisplayPalette/>\r\n                <button className=\"button-large\" onClick={newColor}></button>\r\n            </div>\r\n            \r\n            {displayPicker ?\r\n                <div ref={colorPickerRef} style={{ position: 'absolute', display: 'inline-block', left: colorPickerPos.x, top: colorPickerPos.y + 40, zIndex: 99}}>\r\n                    <ChromePicker color={state.colorPalette[selectedIndex]} onChange={handleColorChange} disableAlpha={true}/>\r\n                </div>\r\n            :null\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport Api from '../util/Api';\r\nimport ValidationError from '../util/ValidationError';\r\nimport Color from './Color';\r\nimport Image from './Image';\r\nimport FormField from './FormField';\r\nimport '../CSS/browser.scss';\r\nimport '../CSS/tooltip.scss';\r\nimport ColorPalette from './ColorPicker';\r\n\r\nexport default function Browser({state, setState}) {\r\n    let newfilter = true;\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(3);\r\n    const [activeFilters, setActiveFilters] = useState([]);\r\n    const inactiveFilters = [\"Keyword\", \"Author\", \"Color count\", \"Size\", \"Date\", \"Transparency\", \"Tolerance\"];\r\n    const { register, control, handleSubmit } = useForm({defaultValues: state.filters});\r\n    const { fields , append, remove } = useFieldArray({\r\n        control,\r\n        name: \"filters\"\r\n    });\r\n\r\n    const onSubmit = filters => {\r\n        setIsLoading(1);\r\n        setState(state => ({...state, filters}));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(isLoading===1){\r\n            getImages();\r\n        }\r\n    }, [state])\r\n\r\n    const addFilter = (filter) => {\r\n        setActiveFilters([...activeFilters, filter]);\r\n        append({ filter });\r\n    }\r\n\r\n    const removeFilter = (filter, index) => {\r\n        setActiveFilters(activeFilters.filter(item => item !== filter));  \r\n        remove(index);\r\n    }\r\n\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-bar\">\r\n\r\n                <ColorPalette state={state} setState={setState}/>\r\n                \r\n                <p>\r\n                    Add filter:    \r\n                    <select\r\n                        \r\n                        onChange={e => addFilter(e.target.value)}>\r\n                        <option value=\"empty\">+</option>\r\n                        {inactiveFilters.map((filter) =>\r\n                            !activeFilters.includes(filter)&&\r\n                            <option key={filter} value={filter}>{filter}</option>\r\n                        )}\r\n                    </select> \r\n                </p>\r\n                \r\n                <form>\r\n                    <div>\r\n                        {fields.map((field, index) => {\r\n                            return (\r\n                                <div className=\"filter-box\" key={field.id}>\r\n                                    <FormField filter={field.filter} register={register}/> \r\n                                    <button type=\"button\" onClick={()=> removeFilter(field.filter, index)}>X</button>\r\n                                </div>\r\n                            )       \r\n                        })}\r\n                    </div>\r\n                        {state.colorPalette.length < 1 && activeFilters.length < 1? null\r\n                        :<button id=\"search-button\" type=\"submit\" onClick={handleSubmit(onSubmit)}>Search</button>}\r\n                    \r\n                </form>\r\n            </div>\r\n            <ShowArtworks/>  \r\n        </>\r\n    )\r\n\r\n    function ShowArtworks() {\r\n        let message = \"\";\r\n        if(isLoading === 0) {message = \"Results\"}\r\n        if(isLoading === 1) {message = \"Loading...\"}\r\n        if(isLoading === 2) {message = \"No results. Consider removing colors or filters, or inrease tolerance.\"}\r\n        if(isLoading === 3) {message = \"Enter search query above\"} \r\n\r\n        return(\r\n            <div>\r\n                <h3 style={{color: '#eeeeee', margin: '20px'}}>{message === \"Results\"? <span className=\"tooltip\"><span className=\"tooltiptext\">Sorted by date, newest to oldest.</span>Results</span> : message}</h3>\r\n                {isLoading === 0 &&\r\n                    <div className=\"grid-container\">\r\n                        {data.map((image, i) =>\r\n                            <Image image={image} key={i} state={state} setState={setState}/>\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function getImages(){\r\n        function validator(response){}\r\n\r\n        function onSucces(response){\r\n            if (response.data.length > 0){\r\n                console.log(response);\r\n                setData(response.data);\r\n                setIsLoading(0);\r\n            } else {\r\n                setIsLoading(2);\r\n            }\r\n        }\r\n\r\n        function onFailure(){\r\n            throw new ValidationError(\"Failed\");\r\n        }\r\n\r\n        setIsLoading(1);\r\n        Api.get('/api', validator, onSucces, onFailure, {\r\n            headers:{\r\n                'colorarray': state.colorPalette,\r\n                'keyword': state.filters.keyword, \r\n                'author': state.filters.author,\r\n                'colormin': state.filters.colorMin,\r\n                'colormax': state.filters.colorMax,\r\n                'sizetype': state.filters.sizeType,\r\n                'height': state.filters.height,\r\n                'width': state.filters.width,\r\n                'beforeDate': state.filters.beforeDate,\r\n                'afterDate': state.filters.afterDate,\r\n                // 'animation': state.filters.animation,\r\n                'transparency': state.filters.transparency,\r\n                'tolerance': state.filters.tolerance\r\n            }\r\n        })\r\n    }\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n});\n\nfunction SvgGobackicon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"36px\",\n    height: \"36px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGobackicon);\nexport default __webpack_public_path__ + \"static/media/gobackicon.17c72d83.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport '../CSS/detailView.scss';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Api from '../util/Api';\r\nimport ValidationError from '../util/ValidationError';\r\nimport Image from './Image';\r\nimport { ReactComponent as GoBackIcon } from '../icons/gobackicon.svg';\r\nimport { ReactComponent as LaunchIcon } from '../icons/launchicon.svg';\r\n\r\nexport default function DetailView({state, setState}){\r\n    const [data, setData] = useState([]);\r\n    const [image, setImage] = useState();\r\n    const [selectedColors, setSelectedColors] = useState([]);\r\n    const [detailLoading, setDetailLoading] = useState(true);\r\n    const [relatingLoading, setRelatingLoading] = useState(true);\r\n    const [copied, setCopied] = useState();\r\n    const [swatch, setSwatch] = useState({});\r\n    const [zoomWidth, setZoomWidth] = useState();\r\n    let { id } = useParams();\r\n\r\n    useEffect(()=>{\r\n        setDetailLoading(true);\r\n        setRelatingLoading(true);\r\n        getImage(id);\r\n    },[id])\r\n\r\n    useEffect(()=>{\r\n        if(detailLoading===false){\r\n            let colorarray = image.colors.slice(0, 4);\r\n            colorarray = JSON.stringify(colorarray);\r\n            getRelatingArtworks(colorarray);\r\n        }\r\n    },[detailLoading])\r\n\r\n    function ShowDetail() {\r\n        if (detailLoading) {\r\n            return <h3>Loading...</h3>\r\n        } \r\n        return <Details/>\r\n    }\r\n\r\n    function selectColor(color, colorObj){\r\n        if (selectedColors.includes(color)) {\r\n            setSelectedColors(selectedColors.filter(function(e) { return e !== color; }))\r\n        } else {\r\n            setSelectedColors([...selectedColors, color]);\r\n        }\r\n        setSwatch(colorObj);\r\n        setCopied(\"\");\r\n    }\r\n\r\n    function mouseSwatch(colorObj){\r\n        if (selectedColors.length === 0){\r\n            setSwatch(colorObj);\r\n            setCopied(\"\");\r\n        }\r\n    }\r\n\r\n    function selectAll(){\r\n        const allColors = []\r\n        for (let i = 0; i < image.colors.length; i++) {\r\n            allColors.push(image.colors[i].hex);\r\n        }\r\n        setSelectedColors(allColors);\r\n    }\r\n\r\n    function deselectAll(){\r\n        setSelectedColors([]);\r\n    }\r\n\r\n    function Palette(){\r\n        const sortedData = [].concat(image.colors)\r\n            .sort((a, b) => a.dbBrightness > b.dbBrightness ? 1 : -1);\r\n\r\n        return sortedData.map((color, i) =>\r\n            <div key={i} id={i} className={selectedColors.includes(color.hex) ? \"color-tile select\" : \"color-tile deselect\"} style={{backgroundColor: color.hex}} onClick={()=>selectColor(color.hex, color)} onMouseEnter={()=>mouseSwatch(color)}>\r\n                <div className=\"hover-visible\" >\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function PaletteBar(){\r\n        return image.colors.map((color, i) =>\r\n            <div key={i} id={i} className=\"palette-bar-item\" style={{backgroundColor: color.hex, width: (color.percent) + \"%\"} } onClick={()=>selectColor(color.hex, color)} onMouseEnter={()=>mouseSwatch(color)}>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function ColorSwatch(){\r\n        return <div className=\"color-swatch\">\r\n            <div className=\"color-example\" style={{backgroundColor: swatch.hex}}></div>            \r\n            <CopyToClipboard text={swatch.hex.toUpperCase()} onCopy={()=>copyText(swatch.hex.toUpperCase())}>\r\n                <p>HEX: {swatch.hex.toUpperCase()} {copied}</p>\r\n            </CopyToClipboard>  \r\n            <p>R: {swatch.rgb[0]} G: {swatch.rgb[1]} B: {swatch.rgb[2]}</p>\r\n            <p>Percentage used: {Math.round(swatch.percent * 100) / 100 }%</p>\r\n            \r\n        </div>\r\n    }\r\n\r\n    function updatePalette(){\r\n        if(selectedColors.length){\r\n            setState(state => ({ colorPalette: selectedColors}));\r\n        }\r\n    }\r\n\r\n    function updateTag(tag){\r\n        console.log(state);\r\n        setState(state => ({ \r\n            colorPalette: {},\r\n            filters: {keyword: tag}}));\r\n        \r\n    }\r\n\r\n    function updateAuthor(author){\r\n        console.log(state);\r\n        setState(state => ({ \r\n            colorPalette: {},\r\n            filters: {author: author}}));\r\n        \r\n    }\r\n\r\n    function copyText(hex){\r\n        setCopied(\" copied!\")\r\n    }\r\n\r\n    function Tags(){\r\n        if (image.tags.length > 0){\r\n            return(\r\n                <p>Tags: \r\n                    {image.tags.map((tag, i) =>\r\n                        <Link key={i} to=\"/\" onClick={()=>updateTag(tag)}>{tag}{i !== image.tags.length - 1 && ', ' }</Link>\r\n                    )}\r\n                </p>\r\n            )\r\n        }else{\r\n            return <p>No tags.</p>\r\n        }\r\n    }\r\n\r\n    function Details(){\r\n        const tagLinks = [];\r\n\r\n        for (const [i, tag] of image.tags.entries()) {\r\n            tagLinks.push(<span key={i}>{tag}</span>)\r\n        }\r\n\r\n        return(\r\n            <div className=\"detail-view\">\r\n                <div className=\"detail-top-bar\">\r\n                    <div className=\"return-bar\">\r\n                        <Link \r\n                            // onClick={()=>updatePalette()}\r\n                            to={{pathname:'/'}}\r\n                            className=\"vertical-center\"\r\n                            >\r\n                            <GoBackIcon/>return\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"pj-bar\">\r\n                        <a href={\"http://pixeljoint.com/pixelart/\" + image.pjId + \".htm\"}>Open on pixeljoint.com <LaunchIcon fill=\"black\"/></a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-container\">\r\n                    <div className=\"image-large\">\r\n                        <div className=\"zoom-detail\">\r\n                            zoom<br/>\r\n                            <button type=\"button\" onClick={()=>zoomOut(image.pjId)}>-</button>\r\n                            <button type=\"button\" onClick={()=>zoomIn(image.pjId)}>+</button>\r\n                        </div> \r\n                        <img className=\"detail-img\" src={image.url} alt={image.title} id={image.pjId} width={zoomWidth} ></img>\r\n                    </div>\r\n                    <div className=\"image-metadata\">\r\n                        <div className=\"meta-text\">\r\n                            <h2>{image.title}</h2>\r\n                            <h3>Created by  <Link to=\"/\" onClick={()=>updateAuthor(image.author)}>{image.author}</Link></h3>\r\n                            <p>{image.desc}</p>\r\n                            <Tags/> \r\n                            <p className=\"tooltip\">\r\n                                {image.trans ? <span className=\"tooltiptext\">{  image.colorCount - 1 }+ transparency</span>:<></>}\r\n                                Number of colors: {image.colorCount} \r\n                                <br></br>\r\n                            </p>\r\n                            <p>\r\n                                Dimensions: {image.width} x {image.height}px\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"palette-bar\">\r\n                            Sorted by percentage used: <br></br>\r\n                            <PaletteBar/><br></br>\r\n                            Sorted by brightness:\r\n                        </div>\r\n                        <div className=\"color-flex\">\r\n                            <div className=\"color-wrapper\">\r\n                                <Palette/>\r\n                            </div>\r\n                            {Object.keys(swatch).length !== 0  ?<ColorSwatch/>: <></>}\r\n                        </div>\r\n                        <Link to={{pathname:'/'}}><button onClick={()=>updatePalette()} >Search with selected colors</button></Link>\r\n                        <span className=\"select-all\">\r\n                            <button onClick={()=>selectAll()}>\r\n                                select all\r\n                            </button>\r\n                            <button onClick={()=>deselectAll()}>\r\n                                deselect all\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"related-art\" style={{ backgroundColor: '#3A3A3C'}}>\r\n                    <ShowRelatingArtworks/>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n    function ShowRelatingArtworks() {\r\n        let message = \"\";\r\n        if(relatingLoading === true) {message = \"Loading artworks with similar palettes\"}\r\n        if(relatingLoading === false) {message = \"Artworks with similar palettes\"}\r\n        if(data.length === 0 && relatingLoading === false) {message = \"No artworks with similar palettes found...\"}\r\n\r\n        return(\r\n            <div>\r\n                <h3 style={{color: '#eeeeee', margin: '20px'}}>{message === \"Results\"? <span className=\"tooltip\"><span className=\"tooltiptext\">Sorted by date, newest to oldest.</span>Results</span> : message}</h3>\r\n                {relatingLoading === false &&\r\n                    <div className=\"grid-container\">\r\n                        {data.map((image, i) =>\r\n                            <Image image={image} key={i} state={state} setState={setState}/>\r\n                        )}\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function zoomIn(id) {\r\n        var img = document.getElementById(id);\r\n        var width = img.clientWidth;\r\n        setZoomWidth((width * 2) + \"px\");\r\n        // img.style.width = (width * 2) + \"px\";\r\n    }\r\n\r\n    function zoomOut(id) {\r\n        var img = document.getElementById(id);\r\n        var width = img.clientWidth;\r\n        if (width === img.naturalWidth) return false;\r\n        setZoomWidth((width / 2) + \"px\");\r\n        // img.style.width = (width / 2) + \"px\";\r\n    }\r\n\r\n    // main render\r\n    return(\r\n        <ShowDetail/>\r\n    )\r\n\r\n    function getImage(id){\r\n        function validator(response){}\r\n\r\n        function onSucces(response){\r\n            setImage(response.data);\r\n            setDetailLoading(false);\r\n        }\r\n\r\n        function onFailure(){\r\n            throw new ValidationError(\"Failed\");\r\n        }\r\n\r\n        Api.get(`/api/${id}`, validator, onSucces, onFailure)\r\n    }\r\n\r\n    function getRelatingArtworks(colorarray){\r\n        function validator(response){}\r\n\r\n        function onSucces(response){\r\n            if (response.data.length > 0){\r\n                let relatingArtworks = response.data\r\n\r\n                for (let color in relatingArtworks) {\r\n                    if(relatingArtworks[color].pjId === image.pjId){\r\n                        relatingArtworks.splice(color, 1);\r\n                    }\r\n                }\r\n\r\n                setData(relatingArtworks);\r\n                setRelatingLoading(false);\r\n            }\r\n        }\r\n\r\n        function onFailure(){\r\n            throw new ValidationError(\"Failed\");\r\n        }\r\n\r\n        Api.get(`/api/${id}/relatingworks`, validator, onSucces, onFailure, {\r\n            headers:{\r\n                'colorarray': colorarray\r\n            }\r\n        })\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport Browser from '../components/Browser';\r\nimport DetailView from '../components/DetailView';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({colorPalette: [], filters: {}});\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Browser state={state} setState={setState}/>\r\n        </Route>\r\n        <Route path=\"/detail/:id\" exact>\r\n          <DetailView state={state} setState={setState}/>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}